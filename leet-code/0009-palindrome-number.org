#+title: 9. Palindrome Number

https://leetcode.com/problems/palindrome-number/

* Contents :toc:
- [[#info][Info]]
- [[#c][C++]]
  - [[#attempt-1---strings][Attempt 1 - Strings]]

* Info

Given an integer x, return true if x is a palindrome, and false otherwise.

Example 1:

#+begin_src
Input: x = 121
Output: true
#+end_src

/Explanation: 121 reads as 121 from left to right and from right to left./

Example 2:

#+begin_src
Input: x = -121
Output: false
#+end_src

/Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome./

Example 3:

#+begin_src
Input: x = 10
Output: false
#+end_src

/Explanation: Reads 01 from right to left. Therefore it is not a palindrome./

Constraints:
- -231 <= x <= 231 - 1

*Follow up: Could you solve it without converting the integer to a string?*

* C++
** Attempt 1 - Strings

#+begin_src C++
bool isPalindrome(int x)
{
    if (x < 0) return false;

    std::string str = std::to_string(x);
    std::string left, right;

    if (str.length() % 2 == 0)
    {
        left = str.substr(0, str.length()/2);
        right = str.substr(str.length()/2);
    }
    else
    {
        left = str.substr(0, str.length()/2);
        right = str.substr((str.length()/2) +1);
    }

    for (int i = 0; i < left.length(); ++i)
    {
        if (left[i] != right[right.length()-i-1])
            return false;
    }

    return true;
}
#+end_src
