#+title: 1480. Running Sum Of 1D Array

https://leetcode.com/problems/running-sum-of-1d-array/

* Content :toc:
- [[#info][Info]]
- [[#c][C++]]

* Info

Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]â€¦nums[i]).

Return the running sum of nums.

Example 1:

#+begin_src
Input: nums = [1,2,3,4]
Output: [1,3,6,10]
#+end_src

/Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4]./

Example 2:

#+begin_src
Input: nums = [1,1,1,1,1]
Output: [1,2,3,4,5]
#+end_src

/Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1]./

Example 3:

#+begin_src
Input: nums = [3,1,2,10,1]
Output: [3,4,6,16,17]
#+end_src

Constraints:
- 1 <= nums.length <= 1000
- -10^6 <= nums[i] <= 10^6

* C++

#+begin_src C++
std::vector<int> runningSum(std::vector<int>& nums)
{
    std::vector<int> runningSum;
    int total {0};

    for (int& v : nums)
    {
        runningSum.push_back(v+total);
        total += v;
    }

    return runningSum;
}
#+end_src
