#+TITLE: Problem 3: Time Zones

[LINK HERE TO PDF OF PROBLEM]

* Contents :toc:
- [[#info][Info]]
- [[#c][C++]]

* Info

[needs description]

* C++

#+BEGIN_SRC C++
#include <iostream>
#include <iomanip>
#include <string>
#include <sstream>
#include <unordered_map>

struct Time 
{
    int h;
    int m;
};

int main() 
{
    int numTimes = 0;
    std::cin >> numTimes;

    std::unordered_map<std::string, Time> timeZones ({
        {"GMT",  {0, 0}},
        {"BST",  {1, 0}},
        {"IST",  {1, 0}},
        {"WET",  {0, 0}},
        {"WEST", {1, 0}},
        {"CET",  {1, 0}},
        {"CEST", {2, 0}},
        {"EET",  {2, 0}},
        {"EEST", {3, 0}},
        {"MSK",  {3, 0}},
        {"MSD",  {4, 0}},
        {"AST",  {-4, 0}},
        {"ADT",  {-3, 0}},
        {"NST",  {-3, 30}},
        {"NDT",  {-2, 30}},
        {"EST",  {-5, 0}},
        {"EDT",  {-4, 0}},
        {"CST",  {-6, 0}},
        {"CDT",  {-5, 0}},
        {"MST",  {-7, 0}},
        {"MDT",  {-6, 0}},
        {"PST",  {-8, 0}},
        {"PDT",  {-7, 0}},
        {"HST",  {-10, 0}},
        {"AKST", {-9, 0}},
        {"AKDT", {-8, 0}},
        {"AEST", {10, 0}},
        {"AEDT", {11, 0}},
        {"ACST", {9, 30}},
        {"ACDT", {10, 30}},
        {"AWST", {8, 0}}
    });

    std::string* outputList = new std::string[numTimes];

    for (int i = 0; i < numTimes; ++i)
    {
        std::string rawTime;
        std::cin >> rawTime;

        std::string tod;
        if (rawTime == "noon")
        {
            tod = "p.m.";
            rawTime = "12:00";
        }
        else if (rawTime == "midnight")
        {
            tod = "a.m.";
            rawTime = "12:00";
        }
        else
        {
            std::cin >> tod;
        }

        Time time = {
            std::stoi(rawTime.substr(0, rawTime.find(':'))),
            std::stoi(rawTime.substr(rawTime.find(':')+1, rawTime.length()))
        };

        std::string from;
        std::cin >> from;
        std::string to;
        std::cin >> to;

        Time diff = {
            timeZones[to].h - timeZones[from].h,
            timeZones[to].m - timeZones[from].m
        };

        if (((time.m + diff.m) / 60) == 1)
        {
            diff.h++;
        }

        if (((time.h + diff.h) % 12) == 0)
        {
            if (tod == "a.m.")
                tod = "p.m.";
            else if (tod == "p.m.")
                tod = "a.m.";
        }

        Time newTime = {
            (time.h + diff.h) % 12,
            (time.m + diff.m) % 60
        };

        if (newTime.h == 0) newTime.h = 12;

        std::stringstream outputTime;

        if (newTime.h == 12 && newTime.m == 0)
        {
            if (tod == "a.m.")
                outputTime << "midnight";
            else if (tod == "p.m.")
                outputTime << "noon";
        }
        else
        {
            outputTime << newTime.h << ':' << std::setw(2) << std::setfill('0') << newTime.m << ' ' << tod << std::endl;
        }

        outputList[i] = outputTime.str();
    }

    for (int i = 0; i < numTimes; ++i)
    {
        std::cout << outputList[i];
    }

    delete[] outputList;

    return 0;
}
#+END_SRC